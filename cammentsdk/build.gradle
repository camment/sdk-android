apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    resourcePrefix 'cmmsdk_'

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName "1.0.0"
        versionCode 1

        defaultPublishConfig 'release'
        publishNonDefault true

        buildConfigField "boolean", "USE_DEEPLINK", "true"
    }

    buildTypes {
        release {
            minifyEnabled true
            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles getDefaultProguardFile('proguard-android.txt'), getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            useProguard false
            debuggable true
        }
    }
}

ext {
    supportLibVersion               =   rootProject.ext.supportLibVersion
    awsVersion                      =   '2.4.5'
    facebookVersion                 =   '4.25.0'
    constraintLayoutVersion         =   '1.0.2'
    exoPlayerVersion                =   'r2.4.4'
    glideVersion                    =   '4.0.0'
    easyPermissionsVersion          =   '0.4.2'

    awsDependencies = [
            core                    :       "com.amazonaws:aws-android-sdk-core:${awsVersion}",
            cognitoSync             :       "com.amazonaws:aws-android-sdk-cognito:${awsVersion}",
            cognitoIdentityProvider :       "com.amazonaws:aws-android-sdk-cognitoidentityprovider:${awsVersion}",
            apiGatewayCore          :       "com.amazonaws:aws-android-sdk-apigateway-core:${awsVersion}",
            s3                      :       "com.amazonaws:aws-android-sdk-s3:${awsVersion}",
            iot                     :       "com.amazonaws:aws-android-sdk-iot:${awsVersion}",
            analytics               :       "com.amazonaws:aws-android-sdk-mobileanalytics:${awsVersion}",
    ]

    facebookDependencies = [
            facebook                :       "com.facebook.android:facebook-android-sdk:${facebookVersion}",
    ]

    otherDependencies = [
            design                  :       "com.android.support:design:${supportLibVersion}",
            recyclerView            :       "com.android.support:recyclerview-v7:${supportLibVersion}",
            constraintLayout        :       "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            exoPlayer               :       "com.google.android.exoplayer:exoplayer:${exoPlayerVersion}",
            easyPermissions         :       "pub.devrel:easypermissions:${easyPermissionsVersion}",
    ]

    glideDependencies = [
            glide                   :       "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler           :       "com.github.bumptech.glide:compiler:${glideVersion}",
    ]
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile awsDependencies.values()
    compile facebookDependencies.values()
    compile otherDependencies.values()

    compile glideDependencies.glide
    annotationProcessor glideDependencies.glideCompiler

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId 'tv.camment.cammentsdk'
            artifactId 'cammentsdk'
            version '0.0.9'
            artifact "$buildDir/outputs/aar/cammentsdk-release.aar" //aar artifact you want to publish

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each { dependency ->
                    if (dependency.name != "unspecified") {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }
    }

    //publish to filesystem repo
    repositories{
        maven {
            url "$buildDir/repo"
        }
    }
}